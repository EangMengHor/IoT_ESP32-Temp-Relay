# ESP32 â†’ MQTT â†’ Node-RED â†’ InfluxDB â†’ Grafana Dashboard

This project demonstrates a complete IoT data pipeline using an **ESP32** running **MicroPython**, sending random sensor values via **MQTT** to **Node-RED**, which stores the data in **InfluxDB** and visualizes it in **Grafana**.

## Features
- Utilizes **BMP280** sensor to measure:
  - Temperature (Â°C)
  - Pressure (hPa)
  - Altitude (m)
- Connects to **Wi-Fi**
- Publishes sensor data to **ThingsBoard Cloud** using **MQTT**
- Provides real-time IoT data visualization on the dashboard

##Application
- **Node Red**
- **Influxdb**
- **Grafana**

## Equipment
- **ESP32 Dev Board** (flashed with MicroPython firmware)  
- **BMP280 Sensor**  
- **Jumper Wires**  
- **USB Cable + Laptop with Thonny IDE**  
- **Wi-Fi access (Internet)**  

## Wiring and Installation
### + Wiring

| BMP280 Pin | ESP32 Pin |
|-------------|-----------|
| VIN         | 3.3V      |
| GND         | GND       |
| SCL         | GPIO 22   |
| SDA         | GPIO 21   |

<img width="800" alt="bmp280_wiring_diagram" src="https://github.com/Theara-Seng/iot_micropython/blob/main/Lab3/image/connection.png" />

## Installation
- Install **[Thonny IDE](https://thonny.org/)**

### + Installing Node-RED (Local Setup)
Node-RED is a flow-based tool for wiring together hardware, APIs, and online services â€” perfect for IoT projects like this one.

### + Option 1 â€” Install via npm (recommended for Windows, macOS, Linux)

> Node-RED requires **Node.js â‰¥ 14** and **npm** installed first.  
> Download Node.js from [https://nodejs.org](https://nodejs.org).

1. Open **Terminal** (macOS/Linux) or **PowerShell** (Windows).
2. Install Node-RED globally:
   ```bash
   npm install -g --unsafe-perm node-red
3. Start Node-RED
   ```bash
   node-red
4. Once started, open your browser and go to:
   ```bash
   http://localhost:1880

### + Installing InfluxDB (v1.x)

InfluxDB is a time-series database used to store sensor and IoT data efficiently.  
> Official downloads: [https://portal.influxdata.com/downloads/](https://portal.influxdata.com/downloads/)

### + Windows Installation
1. Open **PowerShell as Administrator** and start the server:
```bash
wget https://download.influxdata.com/influxdb/releases/v1.12.2/influxdb-1.12.2-windows.zip -UseBasicParsing -OutFile influxdb-1.12.2-windows.zip
```
Then
```bash
Expand-Archive .\influxdb-1.12.2-windows.zip -DestinationPath 'C:\Program Files\InfluxData\influxdb\'
```
2. In a PowerShell window, open the Influx shell:
```powershell
cd "C:\Program Files\InfluxData\influxdb"
.\influxd.exe
```
3. In a new PowerShell window, open the Influx shell:
```powershell
cd "C:\Program Files\InfluxData\influxdb"
.\influx.exe -host 127.0.0.1
```

### + Installing Grafana

Grafana is a powerful visualization platform for time-series data such as InfluxDB metrics.

Official downloads:  
ðŸ”— [https://grafana.com/grafana/download](https://grafana.com/grafana/download)

### + Windows Installation

1. Download the Windows installer (`grafana-enterprise-<version>.windows-amd64.msi`)  
    [Grafana Download for Windows](https://grafana.com/grafana/download?platform=windows)

2. Run the installer (accept defaults).  
   Grafana will be installed as a **Windows Service** and starts automatically.

3. Verify the service is running:
   - Press **Windows + R**, type `services.msc`, press **Enter**.
   - Locate **Grafana** (or **Grafana Enterprise**).
   - If not running â†’ right-click â†’ **Start**.

   Or, from **PowerShell (Admin)**:
   ```powershell
   net start grafana
4. Open Grafana in your browser:
   ```powershell
   http://localhost:3000
   ```
   
   Default login:
   
   Username: admin

   Password: admin
